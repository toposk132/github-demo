# -*- coding: utf-8 -*-
"""DSP-Voronoi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Fc-_vlAvEePptE9jEpdiBySiQlM2fDl
"""

import geopandas as gpd
import matplotlib.pyplot as plt
from scipy.spatial import Voronoi
from shapely.geometry import Point, Polygon, box
from shapely import wkt
import numpy as np
from scipy.spatial import Voronoi

# Read your data from a CSV file
import pandas as pd

# Replace 'your_data.csv' with your actual CSV file path
csv_file = '/content/drive/MyDrive/DS-proj/centroid.csv'

# Assuming your CSV file has 'Suburb_name' and 'Geometry' columns
# You can adjust column names as needed
data = pd.read_csv(csv_file)
data['f0_'] = data['f0_'].apply(wkt.loads)

# Convert the DataFrame to a GeoDataFrame with Point geometries
# geometry = data['f0_'].apply(lambda x: Point(float(x.split(' ')[1]), float(x.split(' ')[2])))
gdf = gpd.GeoDataFrame(data, geometry=data['f0_'], crs='epsg:4326')

gdf

points = [geom for geom in gdf['geometry']]
vor = Voronoi([p.coords[0] for p in points])

tasmania = gpd.read_file('/content/drive/MyDrive/DS-proj/tas_localities.shx')
tasmania_border = tasmania.unary_union
tasmania_border_gdf = gpd.GeoDataFrame(geometry=[tasmania_border])

# Plot the Voronoi diagram before clipping
fig, ax = plt.subplots(figsize=(10, 10))
for region in vor.regions:
    if -1 not in region and len(region) > 0:
        polygon = gpd.GeoSeries(Polygon([vor.vertices[i] for i in region]))
        polygon.boundary.plot(ax=ax, linewidth=0.5, color='b')

tasmania_border_gdf.boundary.plot(ax=ax, color='k', linewidth=1)
ax.set_xlim(tasmania_border_gdf.total_bounds[0], tasmania_border_gdf.total_bounds[2])
ax.set_ylim(tasmania_border_gdf.total_bounds[1], tasmania_border_gdf.total_bounds[3])
plt.xlabel('Longitude')
plt.ylabel('Latitude')
plt.title('Tasmania Voronoi Diagram (Before Clipping)')
plt.grid(False)
plt.show()

# Clip Voronoi polygons to Tasmania's boundaries
voronoi_polygons = []
for region in vor.regions:
    if -1 not in region and len(region) > 0:
        polygon = Polygon([vor.vertices[i] for i in region])
        intersection = polygon.intersection(tasmania_border)
        if not intersection.is_empty:
            if intersection.geom_type == 'Polygon':
                voronoi_polygons.append(intersection)
            elif intersection.geom_type == 'MultiPolygon':
                for geom in intersection.geoms:
                    voronoi_polygons.append(geom)

# Plot the clipped Voronoi diagram
fig, ax = plt.subplots(figsize=(10, 10))
for polygon in voronoi_polygons:
    if polygon.is_valid:
        x, y = polygon.exterior.xy
        ax.fill(x, y, alpha=0.5)

tasmania_border_gdf.boundary.plot(ax=ax, color='k', linewidth=1)
# ax.set_xlim(tasmania_border.total_bounds[0], tasmania_border.total_bounds[2])
# ax.set_ylim(tasmania_border.total_bounds[1], tasmania_border.total_bounds[3])
plt.xlabel('Longitude')
plt.ylabel('Latitude')
plt.title('Tasmania Voronoi Diagram (Clipped to Tasmania Border)')
plt.grid(False)
plt.show()

